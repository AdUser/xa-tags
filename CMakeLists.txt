SET(CNAME "xa-tags")
SET(VERSION 0.01)

PROJECT(${CNAME} C)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

# cmake modules
INCLUDE(CheckIncludeFile)
INCLUDE(CheckLibraryExists)
INCLUDE(CheckFunctionExists)
INCLUDE(CTest)

# user options
OPTION(OPT_WITHOUT_GETTEXT "Build without localization support" "OFF")
OPTION(OPT_ASYNC_DB_WRITE "Allow collection and batch execution of write requests" "ON")
# also, this variables may be usefull:
# CMAKE_BUILD_TYPE        : Debug | Release
# CMAKE_INSTALL_PREFIX    : /usr  | /usr/local | ...

IF    (DEFINED CMAKE_BUILD_TYPE AND CMAKE_BUILD_TYPE STREQUAL "Release")
  SET (CMAKE_BUILD_TYPE "Release")
  SET (RELEASE TRUE)
  IF    (NOT CMAKE_C_FLAGS)
    SET (CMAKE_C_FLAGS "-O2 -Wall -pedantic -DNDEBUG")
  ENDIF (NOT CMAKE_C_FLAGS)
ELSE  (DEFINED CMAKE_BUILD_TYPE AND CMAKE_BUILD_TYPE STREQUAL "Release")
  SET (CMAKE_BUILD_TYPE "Debug")
  SET (CMAKE_C_FLAGS "-O0 -ggdb -Wall -pedantic -DDEBUG")
ENDIF (DEFINED CMAKE_BUILD_TYPE AND CMAKE_BUILD_TYPE STREQUAL "Release")

# set paths
IF    (NOT CMAKE_INSTALL_PREFIX)
  SET(CMAKE_INSTALL_PREFIX "/usr/local")
ENDIF (NOT CMAKE_INSTALL_PREFIX)

SET (INSTALL_BIN "${CMAKE_INSTALL_PREFIX}/bin")
SET (INSTALL_LIB "${CMAKE_INSTALL_PREFIX}/lib")

SET (BUILD_LIBS "")

IF (NOT LIBDIR)
  SET (LIBDIR "lib")
ENDIF (NOT LIBDIR)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

## checks
# sqlite3
FIND_PACKAGE(Sqlite3 REQUIRED)

IF    (SQLITE3_FOUND)
  SET (SQLITE_STATUS "FOUND")
  ADD_DEFINITIONS( -DHAVE_SQLITE3 )
ENDIF (SQLITE3_FOUND)

# gettext
IF    (OPT_WITHOUT_GETTEXT STREQUAL "ON")
  SET (GETTEXT_STATUS "DISABLED")
ELSE  (OPT_WITHOUT_GETTEXT STREQUAL "ON")
  FIND_PACKAGE(Gettext)

  IF    (NOT GETTEXT_FOUND)
    SET (GETTEXT_STATUS "NOT FOUND")
  ELSE  (NOT GETTEXT_FOUND)
    SET (GETTEXT_STATUS "FOUND")
  ENDIF (NOT GETTEXT_FOUND)
ENDIF (OPT_WITHOUT_GETTEXT STREQUAL "ON")

## options
IF    (OPT_ASYNC_DB_WRITE STREQUAL "ON")
  ADD_DEFINITIONS( -DASYNC_DB_WRITE )
ENDIF (OPT_ASYNC_DB_WRITE STREQUAL "ON")

MESSAGE (STATUS "------------------------------------------")
MESSAGE (STATUS "Build type is:        ${CMAKE_BUILD_TYPE}")
MESSAGE (STATUS "CFLAGS is:            ${CMAKE_C_FLAGS}")
MESSAGE (STATUS "")
MESSAGE (STATUS "Install prefix:       ${CMAKE_INSTALL_PREFIX}")
MESSAGE (STATUS "Binaries directory:   ${INSTALL_BIN}")
MESSAGE (STATUS "")
MESSAGE (STATUS "Required libraries:")
MESSAGE (STATUS "  sqlite3: ${SQLITE_STATUS}")
MESSAGE (STATUS "")
MESSAGE (STATUS "Aux dependencies:")
MESSAGE (STATUS "  gettext: ${GETTEXT_STATUS}")
MESSAGE (STATUS "")
MESSAGE (STATUS "Options:")
MESSAGE (STATUS "  Disable i18n support: ${OPT_WITHOUT_GETTEXT}")
MESSAGE (STATUS "  Async db write:       ${OPT_ASYNC_DB_WRITE}")
MESSAGE (STATUS "------------------------------------------")

ADD_SUBDIRECTORY (src)

#IF    (GETTEXT_STATUS STREQUAL "FOUND")
#  ADD_SUBDIRECTORY (po)
#ENDIF (GETTEXT_STATUS STREQUAL "FOUND")

IF    (CMAKE_BUILD_TYPE STREQUAL "Debug")
  ADD_SUBDIRECTORY (tests)
ENDIF (CMAKE_BUILD_TYPE STREQUAL "Debug")
